# Generated by Django 4.2.14 on 2024-07-15 22:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                ("full_name", models.CharField(max_length=100)),
                ("role", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_time", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("resource_accessed", models.CharField(max_length=100)),
                ("action", models.CharField(max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="identity_security.user",
                    ),
                ),
            ],
        ),
        migrations.RunSQL(
            sql="""
                -- Create partitioned table for users
                CREATE TABLE IF NOT EXISTS users (
                    id SERIAL PRIMARY KEY,
                    username VARCHAR(50),
                    email VARCHAR(100),
                    full_name VARCHAR(100),
                    role VARCHAR(50),
                    region VARCHAR(50)
                ) PARTITION BY LIST (region);

                CREATE TABLE IF NOT EXISTS users_east PARTITION OF users FOR VALUES IN ('east');
                CREATE TABLE IF NOT EXISTS users_west PARTITION OF users FOR VALUES IN ('west');
                
                -- Create index on email in users table
                CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
                
                -- Create index on user_id in access_logs table
                CREATE INDEX IF NOT EXISTS idx_access_logs_user ON access_logs(user_id);
            """,
            reverse_sql="""
                DROP TABLE IF EXISTS users_east;
                DROP TABLE IF EXISTS users_west;
                DROP TABLE IF EXISTS users;
                
                DROP INDEX IF EXISTS idx_users_email;
                DROP INDEX IF EXISTS idx_access_logs_user;
            """
        ),
    ]
